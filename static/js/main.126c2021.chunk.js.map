{"version":3,"sources":["SearchInput.js","MovieCard.js","NominateCard.js","MovieDirectory.js","App.js","index.js"],"names":["SearchInput","handleInputChange","event","value","target","props","searchCallback","FormControl","fullWidth","TextField","id","label","onChange","this","InputProps","startAdornment","InputAdornment","position","React","MovieCard","nominateMovie","onChildClick","movie","Paper","Title","Year","Button","variant","color","name","onClick","disabled","nominated","includes","NominateCard","denominateMovie","MovieDirectory","searchMovies","keywords","a","fetch","then","res","json","result","setState","movies","Search","error","handleNomination","currentState","nominatedMovies","handleDenomination","array","state","index","indexOf","splice","isLoaded","showAlert","message","length","Alert","Container","maxWidth","Grid","container","spacing","item","xs","sm","map","App","ReactDOM","render","document","getElementById"],"mappings":"6SAMaA,EAAb,4MACIC,kBAAoB,SAACC,GACjB,IAAIC,EAAQD,EAAME,OAAOD,MACzB,EAAKE,MAAMC,eAAeH,IAHlC,uDAMQ,OACI,cAACI,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAACC,EAAA,EAAD,CACIC,GAAG,4BACHC,MAAM,wCACNC,SAAUC,KAAKZ,kBACfa,WAAY,CACZC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,eAf5B,GAAiCC,a,kBCHpBC,EAAb,4MACIC,cAAgB,SAAClB,GACb,EAAKG,MAAMgB,aAAa,EAAKhB,MAAMiB,QAF3C,uDAMQ,OACI,eAACC,EAAA,EAAD,CAAOb,GAAG,QAAV,UACKG,KAAKR,MAAMiB,MAAME,MADtB,KAC+BX,KAAKR,MAAMiB,MAAMG,KADhD,IAEI,uBACA,cAACC,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,KAAMhB,KAAKR,MAAMiB,MAAME,MACvBM,QAASjB,KAAKO,cACdW,SAAUlB,KAAKR,MAAM2B,UAAUC,SAASpB,KAAKR,MAAMiB,OALvD,6BAVhB,GAA+BJ,aCAlBgB,EAAb,4MACIC,gBAAkB,SAACjC,GACf,EAAKG,MAAMgB,aAAa,EAAKhB,MAAMiB,QAF3C,uDAMQ,OACI,eAACC,EAAA,EAAD,CAAOb,GAAG,QAAV,UACKG,KAAKR,MAAMiB,MAAME,MADtB,KAC+BX,KAAKR,MAAMiB,MAAMG,KADhD,IAEI,uBACA,cAACC,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,KAAMhB,KAAKR,MAAMiB,MAAME,MACvBM,QAASjB,KAAKsB,gBAJlB,2BAVhB,GAAkCjB,a,2BCKrBkB,EAAb,kDACI,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IASVgC,aAVmB,uCAUJ,WAAOC,GAAP,SAAAC,EAAA,sDACXC,MAAM,8CAAD,OAA+CF,IAC/CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKC,SAAS,CACVC,OAAQF,EAAOG,YAGvB,SAACC,GACG,EAAKH,SAAS,CACVG,aAXL,2CAVI,wDA2BnBC,iBAAmB,SAAA3B,GACf,EAAKuB,UAAU,SAAAK,GAAY,MAAM,CAC7BC,gBAAgB,GAAD,mBAAOD,EAAaC,iBAApB,CAAqC7B,SA7BzC,EAiCnB8B,mBAAqB,SAAA9B,GACjB,IAAI+B,EAAK,YAAO,EAAKC,MAAMH,iBACvBI,EAAQF,EAAMG,QAAQlC,IACX,IAAXiC,IACAF,EAAMI,OAAOF,EAAO,GACpB,EAAKV,SAAS,CAACM,gBAAiBE,MApCpC,EAAKC,MAAQ,CACTI,UAAU,EACVZ,OAAQ,GACRK,gBAAiB,IALN,EADvB,qDA2Cc,IAAD,OACDQ,EAAY,wBADX,EAEoC9C,KAAKyC,MAAvCN,EAFF,EAEEA,MAAOF,EAFT,EAESA,OAAQK,EAFjB,EAEiBA,gBACtB,OAAIH,EACO,0CAAaA,EAAMY,YAEK,IAA3BT,EAAgBU,SAChBF,EAAY,cAACG,EAAA,EAAD,0CAGZ,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,8CACA,cAAC,EAAD,CAAa1D,eAAgBO,KAAKwB,eAClC,qBAAK3B,GAAG,OAAR,SACI,eAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,yCACCxB,GAAUA,EAAOyB,KAAI,SAACjD,EAAOiC,GAAR,OAClB,cAAC,EAAD,CAAqCjC,MAAOA,EAAOU,UAAWmB,EAAiB9B,aAAc,EAAK4B,kBAAlG,UAAmBM,EAAnB,YAA4BjC,UAGpC,eAAC2C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,6CACCX,EACAR,EAAgBoB,KAAI,SAACjD,EAAOiC,GAAR,OACjB,cAAC,EAAD,CAA4CjC,MAAOA,EAAOU,UAAWmB,EAAiB9B,aAAc,EAAK+B,oBAAzG,cAA0BG,EAA1B,YAAmCjC,uBApEvE,GAAoCJ,aCErBsD,MANf,WACE,OACE,cAAC,EAAD,KCDJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.126c2021.chunk.js","sourcesContent":["import * as React from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport class SearchInput extends React.Component {\n    handleInputChange = (event) => {\n        let value = event.target.value;\n        this.props.searchCallback(value)\n    }\n    render() {\n        return (\n            <FormControl fullWidth>\n                <TextField\n                    id=\"input-with-icon-textfield\"\n                    label=\"What Movie Title are you looking for?\"\n                    onChange={this.handleInputChange}\n                    InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <SearchIcon />\n                        </InputAdornment>\n                    ),\n                    }}\n                />\n            </FormControl>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {Button, Paper} from \"@material-ui/core\";\n\nexport class MovieCard extends React.Component {\n    nominateMovie = (event) => {\n        this.props.onChildClick(this.props.movie);\n    }\n\n    render() {\n        return (\n            <Paper id=\"paper\">\n                {this.props.movie.Title} ({this.props.movie.Year})\n                <br></br>\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    name={this.props.movie.Title}\n                    onClick={this.nominateMovie}\n                    disabled={this.props.nominated.includes(this.props.movie)}>\n                        Nominate\n                </Button>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport {Button, Paper} from \"@material-ui/core\";\n\nexport class NominateCard extends React.Component {\n    denominateMovie = (event) => {\n        this.props.onChildClick(this.props.movie);\n    }\n\n    render() {\n        return (\n            <Paper id=\"paper\">\n                {this.props.movie.Title} ({this.props.movie.Year})\n                <br></br>\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    name={this.props.movie.Title}\n                    onClick={this.denominateMovie}>\n                        Remove\n                </Button>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport {SearchInput} from \"./SearchInput\";\nimport {MovieCard} from \"./MovieCard\";\nimport {NominateCard} from \"./NominateCard\";\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\n\nexport class MovieDirectory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            movies: [],\n            nominatedMovies: [],\n        }\n    }\n\n\n    searchMovies = async (keywords) => {\n        fetch(`https://www.omdbapi.com/?apikey=6d676ede&s=${keywords}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        movies: result.Search\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        error\n                    });\n                }\n            )\n    }\n\n    handleNomination = movie => {\n        this.setState( currentState => ( {\n            nominatedMovies: [ ...currentState.nominatedMovies, movie ]\n        }));\n    }\n\n    handleDenomination = movie => {\n        var array = [...this.state.nominatedMovies];\n        var index = array.indexOf(movie)\n        if (index !== -1) {\n            array.splice(index, 1);\n            this.setState({nominatedMovies: array});\n        }\n    }\n\n    render() {\n        var showAlert = <div></div>;\n        const {error, movies, nominatedMovies} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            if (nominatedMovies.length === 5) {\n                showAlert = <Alert>You've nominated 5 movies!</Alert>;\n            }\n            return (\n                <Container maxWidth=\"lg\">\n                    <h1>The Shoppies</h1>\n                    <SearchInput searchCallback={this.searchMovies}/>\n                    <div id=\"main\">\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <h1>Results</h1>\n                                {movies && movies.map((movie, index) => (\n                                    <MovieCard key={`${index}-${movie}`} movie={movie} nominated={nominatedMovies} onChildClick={this.handleNomination}/>\n                                ))}\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <h1>Nominations</h1>\n                                {showAlert}\n                                {nominatedMovies.map((movie, index) => (\n                                    <NominateCard key={`Nom ${index}-${movie}`} movie={movie} nominated={nominatedMovies} onChildClick={this.handleDenomination}/>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </div>  \n                </Container>\n            );\n        }\n    }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport {MovieDirectory} from \"./MovieDirectory\";\n\nfunction App() {\n  return (\n    <MovieDirectory />\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}